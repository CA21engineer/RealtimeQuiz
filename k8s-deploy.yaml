name: k8s-deploy

on:
  push:
    branches: [ k8s ]

jobs:
  deploy-gce:
    name: deploy docker-compose to gce
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GOOGLE_SERVICE_KEY: ${{ secrets.GOOGLE_SERVICE_KEY }}
      GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
      GOOGLE_COMPUTE_REGION: ${{ secrets.GOOGLE_COMPUTE_REGION }}
      GOOGLE_COMPUTE_ZONE: ${{ secrets.GOOGLE_COMPUTE_ZONE }}
      GOOGLE_CREDENTIALS_JSON_PATH: ./account.json
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Helm
        run: |
          curl https://storage.googleapis.com/kubernetes-helm/helm-v2.12.3-linux-amd64.tar.gz | tar zx linux-amd64/helm
          sudo mv linux-amd64/helm /usr/local/bin/helm; rm -rf linux-amd64
      - name: Setup Gcloud
        run: |
          echo ${GOOGLE_SERVICE_KEY} | base64 -d > ${GOOGLE_CREDENTIALS_JSON_PATH}
          echo 'github-actions@${GOOGLE_PROJECT_ID}.iam.gserviceaccount.com' | gcloud auth activate-service-account --key-file ${GOOGLE_CREDENTIALS_JSON_PATH}
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/region ${GOOGLE_COMPUTE_REGION}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gcloud --quiet container clusters get-credentials ${GOOGLE_PROJECT_ID}-cluster
          gcloud auth configure-docker
      # kubectl create serviceaccount --namespace kube-system tiller
      # kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:default
      - name: Setup Helm
        run: |
          helm init --service-account default
      - name: Build apiServer
        working-directory: ./apiServer
        run: |
          export IMAGE_NAME=api-server
          export IMAGE_TAG=${GITHUB_SHA}
          export API_SERVER_IMAGE_NAME=gcr.io/${GOOGLE_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}
          docker build . -t ${API_SERVER_IMAGE_NAME}
          docker push ${API_SERVER_IMAGE_NAME}
      - name: Deploy
        working-directory: ./deploy/k8s
        run: |
          export IMAGE_NAME=api-server
          export IMAGE_TAG=${GITHUB_SHA}
          export API_SERVER_IMAGE_NAME=gcr.io/${GOOGLE_PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}
          sh ./deploy.sh
