version: "3.4"
services:
  api-server:
    restart: always
    build: ../app/apiServer/target/docker/stage
    # volumes:
    #   - ../../front/dist:/dist
    networks:
      - default

  front:
    restart: always
    build:
      dockerfile: ../docker-compose/node/Dockerfile
      context: ../front/
    networks:
      - default
    stdin_open: true

  nginx:
    restart: always
    image: nginx:latest
    ports:
      - 3100:80
    volumes:
      - ./nginx/root/etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - default
    depends_on:
      - front
      - api-server

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ../tools/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    volumes:
      - ../tools/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ../tools/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ../tools/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=View Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    depends_on:
      - prometheus
